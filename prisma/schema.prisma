generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id               String            @id @default(auto()) @map("_id") @db.ObjectId
    username         String            @unique
    email            String            @unique
    password         String
    isVerified       Boolean           @default(false)
    role             Role              @default(customer)
    profile          Profile?
    VerificationCode VerificationCode?
    createdAt        DateTime          @default(now())
    updatedAt        DateTime          @updatedAt
}

model Profile {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    name      String
    surname   String
    onlineStatus  Boolean
    jobStatus     String
    languages     String[]
    price           Int
    totalAppointments Int
    appointmentIntervals DateTime[]
    resume        String
    educationInfo EducationInfo[]
    serviceAreas  String[]
    comments      Comment[]
    certificates Certificate[]
    phone     String
    userId    String?  @unique @db.ObjectId
    user      User?    @relation(fields: [userId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model EducationInfo {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    university String
    year String
    profileId String
    profile   Profile @relation(fields: [profileId], references:[id])
}

model Certificate {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    certificate String
    year String
    profileId String
    profile   Profile @relation(fields: [profileId], references:[id])
}

model Comment {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    text      String
    stars     Int
    profileId String
    profile   Profile @relation(fields: [profileId], references:[id])
}

model VerificationCode {
    id             String   @id @default(auto()) @map("_id") @db.ObjectId
    code           String   @unique
    expirationTime DateTime
    userId         String?  @unique @db.ObjectId
    user           User?    @relation(fields: [userId], references: [id])
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
}

enum Role {
    customer
    admin
    partner
}
